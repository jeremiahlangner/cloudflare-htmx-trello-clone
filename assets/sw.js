var i=class{name="";store;constructor(t,r){if(r)return r;this.name=t,this.store=new Promise((o,s)=>{let e=indexedDB.open(this.name,1);e.onerror=()=>s(e.error),e.onupgradeneeded=()=>e.result.createObjectStore(t),e.onsuccess=()=>o(e.result)})}async get(t){let r=await this.store;return new Promise((o,s)=>{let e=r.transaction("keyval","readonly"),n=e.objectStore(this.name).get(t);e.oncomplete=()=>o(n.result),e.onerror=()=>s(e.error)})}async put(t,r){let o=await this.store;return new Promise((s,e)=>{let n=o.transaction("keyval","readwrite"),d=n.objectStore(this.name).put(r,t);n.oncomplete=()=>s(d),n.onerror=()=>e(n.error)})}async delete(t){let r=await this.store;return new Promise((o,s)=>{let e=r.transaction("keyval","readonly"),n=e.objectStore(this.name).delete(t);e.oncomplete=()=>o(n),e.onerror=()=>s(e.error)})}},l=i;var u="cacheName",m="0",c;c||(c=new l("trelloClone",c));self.addEventListener("install",a=>{a.waitUntil(caches.open(m+u).then(t=>t.addAll(["/"])))});self.addEventListener("activate",a=>{});self.addEventListener("fetch",a=>{});
