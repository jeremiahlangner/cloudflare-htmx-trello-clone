{"sw":"var O=Object.freeze,Y=Object.defineProperty;var L=(n,t)=>O(Y(n,\"raw\",{value:O(t||n.slice())}));var $=class{name=\"\";store=Promise.resolve();constructor(t,e){if(console.log(\"setting up\"),e)return e;this.name=t,this.store=new Promise((s,a)=>{let r=indexedDB.open(this.name,1);r.onerror=()=>a(r.error),r.onupgradeneeded=()=>r.result.createObjectStore(this.name),r.onsuccess=()=>s(r.result)})}async get(t){let e=await this.store;return new Promise((s,a)=>{let r=e.transaction(this.name,\"readonly\"),i=r.objectStore(this.name).get(t);r.oncomplete=()=>s(i.result),r.onerror=()=>a(r.error)})}async put(t,e){let s=await this.store;return new Promise((a,r)=>{let i=s.transaction(this.name,\"readwrite\"),d=i.objectStore(this.name).put(e,t);i.oncomplete=()=>a(d),i.onerror=()=>r(i.error)})}async delete(t){let e=await this.store;return new Promise((s,a)=>{let r=e.transaction(this.name,\"readwrite\"),i=r.objectStore(this.name).delete(t);r.oncomplete=()=>s(i),r.onerror=()=>a(r.error)})}},N=$;var P=class{routes;constructor(n=[]){this.routes=[];for(let t of n)this.register(...t)}register(n,t,e=\"GET\"){this.routes.push({path:new URLPattern({pathname:n}),method:e,handler:t})}handle(n){let{request:t}=n;for(let e of this.routes){if(e.method!==t.method)continue;let s=e.path.exec({pathname:new URL(t.url).pathname});if(s)return e.handler({...n,route:s})}return new Response(\"Not found\",{status:404})}};var E={styles:`body {\n  margin: 0;\n  padding: 0;\n  font-family:\n    -apple-system,\n    BlinkMacSystemFont,\n    Segoe UI,\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    Fira Sans,\n    Droid Sans,\n    Helvetica Neue,\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\ncode {\n  font-family:\n    source-code-pro,\n    Menlo,\n    Monaco,\n    Consolas,\n    Courier New,\n    monospace;\n}\n.app {\n  background: #3465a4;\n  height: 100vh;\n}\n.header {\n  background: rgba(0, 0, 0, 0.15);\n  color: #fff;\n  padding: 5px 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  text-align: center;\n  font-size: 40px;\n  font-weight: 200;\n}\n.board {\n  height: 92%;\n  display: -webkit-flex;\n  display: flex;\n  overflow-x: auto;\n}\n.add-list {\n  width: 272px;\n  margin: 10px;\n  -webkit-flex-shrink: 0;\n  flex-shrink: 0;\n}\n.add-list-button {\n  background-color: #0000001f;\n  border-radius: 4px;\n  cursor: pointer;\n  color: #fff;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-align-items: center;\n  align-items: center;\n  min-height: 32px;\n  padding: 5px 8px;\n  transition:\n    background-color 85ms ease-in,\n    opacity 40ms ease-in,\n    border-color 85ms ease-in;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n}\n.add-list-button:hover {\n  background-color: #0000003d;\n}\n.list {\n  background: #dfe3e6;\n  -webkit-flex-shrink: 0;\n  flex-shrink: 0;\n  width: 272px;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  margin: 10px 0 10px 10px;\n  border-radius: 4px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n}\n.list-title {\n  cursor: pointer;\n  padding: 10px;\n  overflow-wrap: break-word;\n}\n.toggle-add-card {\n  cursor: pointer;\n  padding: 10px;\n  color: #333;\n  border-radius: 0 0 4px 4px;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-align-items: center;\n  align-items: center;\n  border: none;\n  width: 100%;\n}\n.toggle-add-card:hover {\n  background-color: #092d4221;\n  color: #17394d;\n  text-decoration: underline;\n}\n.card {\n  position: relative;\n  cursor: grab;\n  background: #fff;\n  margin: 5px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  box-shadow: 0 1px #092d4240;\n  font-size: 15px;\n  overflow-wrap: break-word;\n  min-height: 18px;\n}\n.card:hover {\n  background: #f5f6f7;\n}\n.card-icons {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  -webkit-flex-direction: row;\n  flex-direction: row;\n  -webkit-justify-content: flex-end;\n  justify-content: flex-end;\n}\n.card-icon,\n.card-icons {\n  display: -webkit-flex;\n  display: flex;\n}\n.card-icon {\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  -webkit-align-items: center;\n  align-items: center;\n  -webkit-justify-content: center;\n  justify-content: center;\n  border-radius: 5px;\n  margin: 1px;\n  color: #00000080;\n  background: #f5f6f7;\n  opacity: 0.9;\n  border: none;\n}\n.card-icon:hover {\n  opacity: 1;\n  background: #dcdcdc;\n}\n.edit-card .card {\n  min-height: 50px;\n  padding-left: 8px;\n  padding-right: 15px;\n}\n.edit-card .card:hover {\n  background: #fff;\n}\n.edit-card-textarea {\n  width: 100%;\n  border: none;\n  resize: none;\n  outline: none;\n  font-size: 15px;\n}\n.edit-buttons {\n  display: -webkit-flex;\n  display: flex;\n}\n.edit-button {\n  cursor: pointer;\n  box-shadow: 0 1px #3f6f21;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  margin: 0 5px 10px;\n  padding: 6px 12px;\n  border-radius: 5px;\n  border: none;\n  color: #fff;\n  outline: none;\n}\n.edit-button:hover {\n  opacity: 0.7;\n}\n.edit-button-cancel {\n  cursor: pointer;\n  margin-bottom: 10px;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-align-items: center;\n  align-items: center;\n  font-size: 20px;\n  opacity: 0.5;\n  outline: none;\n  padding: 0;\n  border: none;\n}\n.edit-button-cancel:hover {\n  opacity: 1;\n}\n.list-title-edit {\n  display: -webkit-flex;\n  display: flex;\n  -webkit-align-items: center;\n  align-items: center;\n}\n.list-title-textarea {\n  margin: 6px 0 5px 6px;\n  border-radius: 3px;\n  border: none;\n  resize: none;\n  outline: none;\n  font-size: 15px;\n  padding: 5px;\n}\n.list-title-textarea:focus {\n  box-shadow: inset 0 0 0 2px #0079bf;\n}\n.add-list-editor {\n  background: #dfe3e6;\n  border-radius: 5px;\n  padding: 2px;\n}\n.hidden {\n  display: none;\n}\n`};function o(n,...t){return String.raw({raw:n},...t)}function A(n){let t=\"\";do t=Math.random().toString(16).substring(2,15);while(n[t]);return t}async function l(n){return new Response(n,{headers:{\"content-type\":\"text/html;charset=UTF-8\"}})}var J;function I(n){return o(J||(J=L([`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n        <title>HTMX Trello Clone</title>\n        <style>\n          `,`\n        </style>\n        <script>\n          const registerServiceWorker = async () => {\n            if (\"serviceWorker\" in navigator) {\n              try {\n                const registration = await navigator.serviceWorker.register(\n                  \"/sw.js\",\n                  {\n                    scope: \"/\",\n                    type: \"module\",\n                  },\n                );\n                if (registration.installing) {\n                  console.log(\"Service worker installing\");\n                } else if (registration.waiting) {\n                  console.log(\"Service worker installed\");\n                } else if (registration.active) {\n                  console.log(\"Service worker active\");\n                }\n              } catch (error) {\n                console.error(\"Registration failed with\" + error);\n              }\n            }\n          };\n          registerServiceWorker();\n        <\\/script>\n      </head>\n      <body>\n        `,`\n      </body>\n    </html>\n  `])),E.styles,n.template)}var k=o`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    class=\"bi bi-plus\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n    />\n  </svg>\n`,v=o`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    class=\"bi bi-x\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"\n    />\n  </svg>\n`,R=o`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    fill=\"currentColor\"\n    class=\"bi bi-pencil-fill\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"\n    />\n  </svg>\n`;function tt(n){let{list:t}=n;return o`\n    <button\n      class=\"toggle-add-card\"\n      id=\"btn-add-card-${t.id}\"\n      type=\"button\"\n      _=\"on click toggle .hidden on me toggle .hidden on #add-card-${t.id}\"\n    >\n      ${k}\n      <span> Add another card</span>\n    </button>\n  `}var C=tt;function et(n){let{list:t}=n;return o`\n    <div class=\"edit-card hidden\" id=\"add-card-${t.id}\">\n      <div class=\"card\">\n        <textarea\n          class=\"edit-card-textarea\"\n          name=\"label-${t.id}\"\n          placeholder=\"Enter a title for this card...\"\n          style=\"height: 34px;\"\n          maxlength=\"300\"\n          autofocus=\"true\"\n        ></textarea>\n        <input type=\"hidden\" name=\"listId\" value=\"${t.id}\" />\n      </div>\n      <div class=\"edit-buttons\">\n        <button\n          class=\"edit-button\"\n          type=\"button\"\n          tabindex=\"0\"\n          style=\"background-color: rgb(90, 172, 68);\"\n          hx-post=\"/cards/new/${t.id}\"\n          hx-target=\"#board\"\n          hx-swap=\"innerHTML\"\n          hx-params=\"label-${t.id}\"\n        >\n          Add card\n        </button>\n        <div\n          class=\"edit-button-cancel\"\n          tabindex=\"0\"\n          _=\"on click toggle .hidden on #add-card-${t.id} toggle .hidden on #btn-add-card-${t.id}\"\n        >\n          ${v}\n        </div>\n      </div>\n    </div>\n  `}var j=et;var nt=o`\n  <div\n    id=\"add-list\"\n    class=\"add-list-button\"\n    hx-get=\"/lists/add\"\n    hx-swap=\"outerHTML\"\n    hx-target=\"#add-list\"\n    draggable=\"false\"\n  >\n    ${k} Add another list\n    <div></div>\n  </div>\n`,S=nt;function it(n){let{list:t,card:e}=n;return o`\n    <div\n      class=\"card\"\n      id=\"card-${e.id}\"\n      tabindex=\"0\"\n      aria-roledescription=\"Draggable item. Press space bar to lift\"\n      draggable=\"true\"\n      _=\"on mouseenter toggle .hidden on #card-edit-${e.id} until mouseleave\"\n    >\n      <div class=\"card-icons hidden\" id=\"card-edit-${e.id}\">\n        <button\n          class=\"card-icon\"\n          type=\"button\"\n          hx-get=\"/cards/edit/${t.id}/${e.id}\"\n          hx-target=\"#card-${e.id}\"\n          hx-swap=\"outerHTML\"\n        >\n          ${R}\n        </button>\n      </div>\n      ${e.label}\n    </div>\n  `}var y=it;function st(n){let t=o``;for(let e of n.cards)t+=o`${y({list:n,card:e})}`;return t}function rt(n){let{lists:t}=n,e=o``;for(let s of t)e+=o`\n      <div class=\"list\" draggable=\"true\" id=\"lists-list-${s.id}\">\n        <div class=\"list-title\">${s.name}</div>\n\n        <div class=\"list-cards sortable\" id=\"list-${s.id}\">\n          ${st(s)}\n        </div>\n        ${C({list:s})} ${j({list:s})}\n      </div>\n    `;return e+=o` <div class=\"add-list\">${S}</div> `,e}var f=rt;var M;function at(n){return l(I({template:o(M||(M=L([`\n        <div class=\"app\">\n          <div class=\"header\">htmx Trello Clone</div>\n\n          <form hx-post=\"/cards/move\" hx-trigger=\"cardmoved\" hx-target=\"#board\">\n            <input id=\"fromList\" type=\"hidden\" name=\"from\" />\n            <input id=\"toList\" type=\"hidden\" name=\"to\" />\n            <input id=\"movedCard\" type=\"hidden\" name=\"movedCard\" />\n            <input id=\"index\" type=\"hidden\" name=\"index\" />\n            <input id=\"prevIndex\" type=\"hidden\" name=\"prevIndex\" />\n            <div\n              id=\"board\"\n              class=\"board\"\n              _=\"on end put event.from.id into #fromList.value put event.to.id into #toList.value put event.item.id into #movedCard.value put event.newIndex into #index.value put event.oldIndex into #prevIndex.value then send cardmoved\"\n            >\n              `,`\n            </div>\n          </form>\n        </div>\n        <script src=\"https://unpkg.com/htmx.org\"><\\/script>\n        <script src=\"https://unpkg.com/hyperscript.org\"><\\/script>\n        <script src=\"https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js\"><\\/script>\n        <script>\n          htmx.onLoad(function (content) {\n            const foo = new Sortable(board, {\n              name: \"board\",\n              animation: 150,\n              group: \"board\",\n            });\n            const cards = document.querySelectorAll(\".sortable\");\n            for (const card of cards) {\n              new Sortable(card, {\n                animation: 150,\n                group: \"card\",\n              });\n            }\n          });\n        <\\/script>\n      `])),f(n))}))}var _=at;function ot(){return l(o`\n    <div id=\"add-list\" class=\"add-list-editor\">\n      <form hx-post=\"/lists\" hx-target=\"#board\">\n        <div class=\"list-title-edit\">\n          <input\n            class=\"list-title-textarea\"\n            type=\"text\"\n            maxlength=\"30\"\n            name=\"name\"\n            placeholder=\"Enter list title...\"\n            style=\"width: 245px; height: 17px;\"\n            autofocus=\"true\"\n          />\n        </div>\n        <div class=\"edit-buttons\">\n          <button\n            class=\"edit-button\"\n            type=\"submit\"\n            tabindex=\"0\"\n            style=\"background-color: rgb(90, 172, 68);\"\n          >\n            Add list\n          </button>\n          <button\n            class=\"edit-button-cancel\"\n            type=\"button\"\n            tabindex=\"0\"\n            hx-get=\"/lists/cancel\"\n            hx-target=\"#add-list\"\n            hx-swap=\"outerHTML\"\n          >\n            ${v}\n          </button>\n        </div>\n      </form>\n    </div>\n  `)}var z=ot;function dt(n){let{list:t,card:e}=n;return o`\n    <div id=\"edit-card\" class=\"edit-card\">\n      <form\n        hx-put=\"/cards/${t.id}/${e.id}\"\n        hx-target=\"#edit-card\"\n        hx-swap=\"outerHTML\"\n      >\n        <div class=\"card\">\n          <textarea\n            class=\"edit-card-textarea\"\n            name=\"label\"\n            style=\"height: 34px;\"\n            maxlength=\"300\"\n            autofocus=\"true\"\n          >\n${e.label}</textarea\n          >\n          <input type=\"hidden\" name=\"listId\" value=\"${t.id}\" />\n        </div>\n        <div class=\"edit-buttons\">\n          <button\n            class=\"edit-button\"\n            type=\"submit\"\n            tabindex=\"0\"\n            style=\"background-color: rgb(90, 172, 68);\"\n            _=\"on htmx:afterOnLoad remove #edit-card\"\n          >\n            Save\n          </button>\n          <button\n            class=\"edit-button\"\n            type=\"button\"\n            tabindex=\"0\"\n            style=\"background-color: rgb(234, 37, 37);\"\n            hx-delete=\"/cards/${t.id}/${e.id}\"\n            _=\"on htmx:afterOnLoad remove #edit-card\"\n          >\n            Delete\n          </button>\n          <div\n            class=\"edit-button-cancel\"\n            tabindex=\"0\"\n            hx-get=\"/cards/cancel-edit/${t.id}/${e.id}\"\n            hx-target=\"#edit-card\"\n            hx-swap=\"outerHTML\"\n          >\n            ${v}\n          </div>\n        </div>\n      </form>\n    </div>\n  `}var D=dt;async function U(n){let{env:t}=n;return{lists:JSON.parse(await t.TrelloLists.get(\"lists\"))}}async function B(n){let{route:t,env:e}=n,{list_id:s}=t.pathname.groups,a=JSON.parse(await e.TrelloLists.get(\"lists\"));return a=a.filter(r=>r.id!==s),await e.TrelloLists.put(\"lists\",JSON.stringify(a)),{lists:a}}async function q(n){let{request:t,env:e,route:s}=n,{list_id:a,id:r}=s.pathname.groups,i=new URLSearchParams(await t.text()),d=Object.fromEntries(i),{label:c}=d,h=JSON.parse(await e.TrelloLists.get(\"lists\")),b=h.find(x=>x.id===a),m=b.cards.find(x=>x.id===r);return m.label=c,await e.TrelloLists.put(\"lists\",JSON.stringify(h)),{list:b,card:m}}async function F(n){let{env:t,route:e}=n,{list_id:s,id:a}=e.pathname.groups,i=JSON.parse(await t.TrelloLists.get(\"lists\")).find(c=>c.id===s),d=i.cards.find(c=>c.id===a);return{list:i,card:d}}async function W(n){let{env:t,route:e}=n,{list_id:s,id:a}=e.pathname.groups,r=JSON.parse(await t.TrelloLists.get(\"lists\")),i=r.find(d=>d.id===s);i.cards=i.cards.filter(d=>d.id!==a),await t.TrelloLists.put(\"lists\",JSON.stringify(r))}async function V(n){let{request:t,env:e}=n,s=new URLSearchParams(await t.text()),a=Object.fromEntries(s),{name:r}=a,i=JSON.parse(await e.TrelloLists.get(\"lists\"));return i.push({name:r,id:A({}),cards:[]}),await e.TrelloLists.put(\"lists\",JSON.stringify(i)),{lists:i}}async function G(n){let{request:t,route:e,env:s}=n,a=JSON.parse(await s.TrelloLists.get(\"lists\")),{list_id:r}=e.pathname.groups,i=new URLSearchParams(await t.text()),c=Object.fromEntries(i)[\"label-\"+r],h=a.find(m=>m.id===r),b={label:c,id:A({}),list:r};return h.cards.push(b),await s.TrelloLists.put(\"lists\",JSON.stringify(a)),{lists:a}}async function X(n){let{env:t,route:e}=n,s=e.pathname.groups.id;return{list:JSON.parse(await t.TrelloLists.get(\"lists\")).find(i=>i.id===s)}}async function K(n){let{env:t,route:e}=n,{list_id:s,id:a}=e.pathname.groups,i=JSON.parse(await t.TrelloLists.get(\"lists\")).find(c=>c.id===s),d=i.cards.find(c=>c.id===a);return{list:i,card:d}}async function Q(n){let{request:t,env:e}=n,s=new URLSearchParams(await t.text()),a=Object.fromEntries(s),{from:r,to:i,movedCard:d,index:c,prevIndex:h}=a,[,b]=r.split(\"-\"),[,m]=i.split(\"-\"),x=d.replace(\"card-\",\"\"),p=JSON.parse(await e.TrelloLists.get(\"lists\"));try{if(r===\"board\"&&i===\"board\"){let u=p[h];p=p.filter(w=>w.id!==u.id),p.splice(c,0,u),await e.TrelloLists.put(\"lists\",JSON.stringify(p))}else{let u=JSON.parse(JSON.stringify(p)),w=u.find(g=>g.id===b),H=w.cards.find(g=>g.id==x);H.list=m,w.cards=w.cards.filter(g=>g.id!=x),u.find(g=>g.id==m).cards.splice(Number(c),0,H),p=u,await e.TrelloLists.put(\"lists\",JSON.stringify(p))}}catch(u){console.error(u)}return{lists:p}}var T;T||(T=new N(\"trelloClone\",T));self.addEventListener(\"install\",n=>{});self.addEventListener(\"activate\",n=>{});self.addEventListener(\"fetch\",n=>n.respondWith((async()=>{let t=n.request,e={TrelloLists:T},s=void 0,a;try{let i=await e.TrelloLists.get(\"lists\")}catch{}if(!a){let i=await fetch(\"/db/lists\").then(d=>d.json());await e.TrelloLists.put(\"lists\",JSON.stringify(i))}return new P([[\"/\",async i=>_(await U(i))],[\"/lists\",async i=>l(f(await V(i))),\"POST\"],[\"/lists/add\",z],[\"/lists/cancel\",()=>l(S)],[\"/lists/:list_id\",async i=>l(f(await B(i))),\"DELETE\"],[\"/cards/move\",async i=>l(f(await Q(i))),\"POST\"],[\"/cards/new/:list_id\",async i=>l(f(await G(i))),\"POST\"],[\"/cards/cancel/:id\",async i=>l(C(await X(i)))],[\"/cards/edit/:list_id/:id\",async i=>l(D(await K(i)))],[\"/cards/:list_id/:id\",async i=>l(y(await q(i))),\"PUT\"],[\"/cards/:list_id/:id\",async i=>(await W(i),l(\"\")),\"DELETE\"],[\"/cards/cancel-edit/:list_id/:id\",async i=>l(y(await F(i)))]]).handle({request:t,env:e,ctx:s})})()));\n"}